// Copyright (c) 2013, Cloudera, inc.
// Confidential Cloudera Information: Covered by NDA.
package kudu;

// ============================================================================
//  Local file system metadata
// ============================================================================

// When any server initializes a new filesystem (eg a new node is created in the
// cluster), it creates this structure and stores it persistently.
message InstanceMetadataPB {

  // The UUID which is assigned when the instance is first formatted. This uniquely
  // identifies the node in the cluster.
  required bytes uuid = 1;

  // Human-readable string indicating when and where the node was first
  // initialized.
  required string format_stamp = 2;

  // TODO: add a "node type" (TS/Master?)
}

message BlockIdPB {
  required string id = 1;
}

// The kind of record.
enum BlockRecordType {
  CREATE = 1;
  DELETE = 2;
}

// An element found in a container metadata file of the log-backed block
// storage implementation.
//
// Each one tracks the existence (creation) or non-existence (deletion)
// of a particular block. They are written sequentially, with subsequent
// messages taking precedence over earlier ones (e.g. "CREATE foo" followed
// by "DELETE foo" means that block foo does not exist).
message BlockRecordPB {
  // The unique identifier of the block.
  required BlockIdPB block_id = 1;

  // Whether this is a CREATE or a DELETE.
  required BlockRecordType op_type = 2;

  // The offset of the block in the container data file.
  //
  // Required for CREATE.
  optional int64 offset = 3;

  // The length of the block in the container data file.
  //
  // Required for CREATE.
  optional int64 length = 4;
}
